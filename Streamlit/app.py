import streamlit as st
import subprocess
import os
import time

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Disponibilidad Futura por Canales", page_icon="‚è±Ô∏è")

# T√≠tulo de la aplicaci√≥n
st.title("üìä Disponibilidad Futura por Canales")

# Descripci√≥n breve
st.markdown("""
Bienvenido a la aplicaci√≥n de **Disponibilidad Futura por Canales**. Aqu√≠ puedes configurar las variables necesarias y ejecutar el c√≥digo autom√°ticamente.
""")

# L√≠nea divisoria
st.markdown("---")

# Inputs organizados en columnas
col1, col2, col3 = st.columns(3)

with col1:
    semana = st.number_input("**Semana (1-4):**", min_value=1, max_value=4, step=1)
with col2:
    tienda = st.selectbox("**Incluir tiendas:**", options=[0, 1], format_func=lambda x: "No" if x == 0 else "S√≠")
with col3:
    faltan = st.selectbox("**Incluir faltantes:**", options=[0, 1], format_func=lambda x: "No" if x == 0 else "S√≠")
ruta_script = os.path.join(
    os.path.expanduser("~"),
    r"DERCO CHILE REPUESTOS SpA\Planificaci√≥n y abastecimiento - Documentos\Planificaci√≥n y Compras AFM\S&OP Demanda\Codigos Demanda\Dispo-Canal2.py"
)


# Bot√≥n para ejecutar el c√≥digo
if st.button("üöÄ Ejecutar C√≥digo"):
    # Verifica si el archivo existe
    if not os.path.exists(ruta_script):
        st.error(f"‚ö†Ô∏è No se encontr√≥ el archivo `{ruta_script}`. Verifica la ruta.")
    else:
        # Inicia el cron√≥metro
        start_time = time.time()
        
        # Ejecuta el script
        with st.spinner("‚è≥ Ejecutando el c√≥digo, por favor espera..."):
            result = subprocess.run(
                ["python", ruta_script, str(semana), str(tienda), str(faltan)],
                capture_output=True,
                text=True,
                encoding="utf-8"
            )
        
        # Calcular tiempo total
        total_time = time.time() - start_time

        # Mostrar la salida del script
        st.success(f"‚úÖ **Ejecuci√≥n completada en {total_time:.2f} segundos.**")
        st.markdown("### üìã Salida del Script:")
        st.code(result.stdout, language='text')
        
        # Mostrar errores, si los hay
        if result.stderr:
            st.error("‚ùå **Errores detectados:**")
            st.code(result.stderr, language='text')
        
# L√≠nea divisoria final
st.markdown("---")
st.markdown("Desarrollado por [P&A] ¬© 2024")